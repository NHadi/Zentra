-- Petty Cash Omnichannel Enhancement Migration

-- Create master_channel table for different sales channels
CREATE TABLE public.master_channel (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    code character varying(50) NOT NULL,
    name character varying(100) NOT NULL,
    type character varying(20) NOT NULL,
    description text,
    is_active boolean DEFAULT true,
    tenant_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_by character varying(255) NOT NULL,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_by character varying(255) NOT NULL,
    CONSTRAINT master_channel_type_check CHECK (
        type IN ('physical_store', 'online_marketplace', 'website', 'wholesale', 'factory_outlet', 'distributor')
    )
);

-- Add indexes and constraints
CREATE UNIQUE INDEX idx_master_channel_code ON public.master_channel(code, tenant_id);
ALTER TABLE public.master_channel
    ADD CONSTRAINT fk_master_channel_tenant
    FOREIGN KEY (tenant_id) 
    REFERENCES public.master_tenant(id);

-- Add comment
COMMENT ON TABLE public.master_channel IS 'Stores different sales and distribution channels for omnichannel operations';

-- Add new columns to petty_cash table
ALTER TABLE public.petty_cash
    ADD COLUMN channel_id integer,
    ADD COLUMN division_id integer,
    ADD COLUMN budget_limit numeric(10,2),
    ADD COLUMN budget_period character varying(20),
    ADD COLUMN alert_threshold numeric(10,2),
    ADD COLUMN balance_updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP;

-- Add constraint for budget_period
ALTER TABLE public.petty_cash
    ADD CONSTRAINT petty_cash_budget_period_check 
    CHECK (budget_period IN ('daily', 'weekly', 'monthly', 'quarterly', 'yearly'));

-- Add foreign keys for channel and division
ALTER TABLE public.petty_cash
    ADD CONSTRAINT fk_petty_cash_channel
    FOREIGN KEY (channel_id) 
    REFERENCES public.master_channel(id),
    ADD CONSTRAINT fk_petty_cash_division
    FOREIGN KEY (division_id) 
    REFERENCES public.master_division(id);

-- Add new columns to petty_cash_requests table
ALTER TABLE public.petty_cash_requests
    ADD COLUMN petty_cash_id integer NOT NULL, -- Add relationship to petty_cash
    ADD COLUMN channel_id integer,
    ADD COLUMN division_id integer,
    ADD COLUMN receipt_urls text[],
    ADD COLUMN payment_method character varying(20),
    ADD COLUMN reference_number character varying(100),
    ADD COLUMN budget_code character varying(50),
    ADD COLUMN settlement_status character varying(20) DEFAULT 'pending',
    ADD COLUMN settlement_date timestamp with time zone,
    ADD COLUMN reimbursement_status character varying(20) DEFAULT 'not_required' 
        CHECK (reimbursement_status IN ('not_required', 'pending', 'approved', 'rejected', 'completed')),
    ADD COLUMN reimbursement_date timestamp with time zone;

-- Add constraints for new columns in petty_cash_requests
ALTER TABLE public.petty_cash_requests
    ADD CONSTRAINT petty_cash_requests_payment_method_check 
    CHECK (payment_method IN ('cash', 'bank_transfer', 'digital_wallet', 'other')),
    ADD CONSTRAINT petty_cash_requests_settlement_status_check 
    CHECK (settlement_status IN ('pending', 'settled', 'cancelled'));

-- Add foreign keys for petty_cash, channel and division in petty_cash_requests
ALTER TABLE public.petty_cash_requests
    ADD CONSTRAINT fk_petty_cash_requests_petty_cash
    FOREIGN KEY (petty_cash_id)
    REFERENCES public.petty_cash(id),
    ADD CONSTRAINT fk_petty_cash_requests_channel
    FOREIGN KEY (channel_id) 
    REFERENCES public.master_channel(id),
    ADD CONSTRAINT fk_petty_cash_requests_division
    FOREIGN KEY (division_id) 
    REFERENCES public.master_division(id);

-- Create indexes for better performance
CREATE INDEX idx_petty_cash_requests_petty_cash ON public.petty_cash_requests(petty_cash_id);
CREATE INDEX idx_petty_cash_requests_channel ON public.petty_cash_requests(channel_id);
CREATE INDEX idx_petty_cash_channel ON public.petty_cash(channel_id);
CREATE INDEX idx_petty_cash_requests_division ON public.petty_cash_requests(division_id);
CREATE INDEX idx_petty_cash_division ON public.petty_cash(division_id);

-- Create trigger function to update petty_cash balance
CREATE OR REPLACE FUNCTION update_petty_cash_balance()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.status = 'completed' AND OLD.status != 'completed' THEN
        UPDATE public.petty_cash
        SET current_balance = current_balance - NEW.amount,
            balance_updated_at = CURRENT_TIMESTAMP
        WHERE id = NEW.petty_cash_id;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger to automatically update petty_cash balance
CREATE TRIGGER tr_update_petty_cash_balance
    AFTER UPDATE ON public.petty_cash_requests
    FOR EACH ROW
    EXECUTE FUNCTION update_petty_cash_balance();

-- Add comment to explain the migration
COMMENT ON TABLE public.petty_cash IS 'Petty cash management table with omnichannel support';
COMMENT ON TABLE public.petty_cash_requests IS 'Petty cash request table with enhanced tracking and channel support'; 